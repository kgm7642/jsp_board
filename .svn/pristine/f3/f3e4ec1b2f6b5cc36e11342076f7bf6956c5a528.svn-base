- Java 어플리케이션, Applet, Servlet 의 차이점을 기술하십시요. -

Applet은 application과 let을 조합한 합성어로 자바 언어로 작성된 소프트웨어를 뜻하는데
사용자가 서버에 요청을 하지 않아도 수행할 수 있도록 단순한 시계나 달력 같은 간단한 작업 등을
웹 상에서 실현하게 해 주는 응용 프로그램입니다.

Servlet은 웹 서버 쪽에 작성된 자바 프로그램으로 브라우저의 요청을 통해 웹 서버에 의해 실행됩니다.
메모리 내에 적재된 상태로 남아 있어서 매번 읽을 필요가 없고, 스레드 형태로 실행되기 때문에
효율성이 높습니다.

-------------------------------------------------------------------------

- 자신이 다른 사람에게 Java Class 및 Interface 를 설명한다 생각하고, 
이 2가지의 정의에 대해 자유롭게 기술하십시요. -

자바의 클래스란 변수와 메서드를 가지고 있는 집합입니다. 여기서 변수란 속성을 의미하고 메서드란 
행위를 의미합니다. 클래스는 붕어빵틀과 같다고 이야기 할 수 있습니다. 붕어빵을 만들기 위해서는
붕어빵틀이 필요한데 여기서 붕어빵틀이 클래스고 만들어지는 붕어빵이 객체입니다. 변수에는 붕어빵의
이름, 맛 등을 정의할 수 있고 메서드에는 붕어빵을 굽다와 같은 행위를 정의할 수 있습니다.

인터페이스란 동일한 목적하에 동일한 기능을 수행하게끔 강제하는 역할을 합니다. 만약 대학 교수님이
과제를 내주셨다고 가정을 해보겠습니다. 별다른 양식이 없다면 학생들은 여러가지 언어를 사용하거나 
과제를 ppt, 엑셀, pdf 등 다양한 방식으로 제출할 것입니다. 이렇게되면 교수님은 과제를 평가하기
매우 힘들것입니다. 이러한 일을 예방하고자 처음부터 언어는 한국어 제출방식은 ppt로 정해주면 
제출방식이 통일되어 과제를 평가하는데 수월해질 것입니다. 자바의 인터페이스도 마찬가지입니다.
자바에서 클래스를 생성할때 정해진 규칙이 없다면 다양한 클래스가 만들어지겠지만 인터페이스를 구현하면
규칙에 따라 클래스를 생성할 수 있게 됩니다.

-------------------------------------------------------------------------

- Java의 InputStream, OutputStream, Reader, Writer 가 무엇인 공부하고
간략히 기술하시기 바랍니다. -

자바에서 데이터는 Stream을 통해 입출력됩니다. 프로그램이 출발지/도착지인지에 따라 스트림의 종류가
결정됩니다. 데이터를 입력 받을 때는 InputStream, 데이터를 출력 할 때는 OutputStream울
사용합니다. InputStream이란 바이트 기반 입력 스트림의 최상위 클래스로 추상클래스입니다.
모든 바이트 기반 입력 스트림은 이 클래스를 상속받아서 만들어집니다. 반대로 OutputStream이란
바이트 기반 출력 스트림의 최상위 클래스로 추상클래스입니다. 모든 바이트 기반 출력 스트림 클래스는
이 클래스를 상속받아서 만들어집니다.
Reader란 문자 기반 입력 스트림의 최상위 추상 클래스입니다. 모든 문자 기반 입력 클래스는 Reader
클래스를 상속받아 만들어지며 FileReader, BufferedReader, InputStreamReader 클래스가
있습니다. Writer란 문자 기반 출력 스트림의 최상위 추상 클래스입니다. 모든 문자 기반 출력 클래스는
Writer클래스를 상속받아 만들어지며 FileWriter, BufferedWriter, PrintWriter,
OutputStreamWriter 클래스가 있습니다.

-------------------------------------------------------------------------

- Collection, List, Set, Map 은 클래스가 아닌 인터페이스입니다.
각각 어떤 의미인지 간략히 서술하세요. (API 참조) -


- List, Set, Map 의 구현클래스는 어떤것들이 있는지 각각 나열하세요. (API 참조) -



- System.out 이란?
무심코 사용하는 System.out 은 클래스명.속성명 형태로 사용되어지는 것으로 보아 System 이라는 클래스의 
ststic public 속성일 겁니다. (이렇게 풀어서 보니 다르게 와 닿죠?)
System.out 은 어떤 클래스 형인지 Java API 를 참조하여 답하십시요 -


- HTTP 와 FTP 란 용어를 한번쯤은 들어보셨을 것으로 생각됩니다. 이 용어들은 무엇을 의미하는지 자유롭게 
기술하시기 바랍니다. -


- HTTP 요청 메쏘드의 종류 및 각 메쏘드의 용도와 특징을 기술하십시요.
(자바 메쏘드가 아니라 GET, POST와 같은 HTTP 메쏘드 입니다) -


- HTTP 응답 컨텐트타입엔 어떤 종류가 있는지 자주 사용될만한것 10개만 기술하십시요. -


- Servlet은 main() 메쏘드가 없는데도 동작이 됩니다. 말이 일되죠? main() 메쏘드를 가진 클래스는 
어디에 있을까요? -


- Servlet.service()의 인자인 요청 및 응답객체를 만들어주는 주체는 누구입니까? -


- 응답객체의 writer 속성은 빨대라고 생각할 수 있습니다. System.out 빨대의 끝단은 콘솔(커멘드창)입니다.
응답객체 writer의 끝단은 어디일까요? -


- multiplication.jsp 가 변환된 Servlet 소스파일을 Tomcat 의 work 디렉토리 하위에서 찾은 후, 
JSP의 page 지시자나 여러분들의 작성한 HTML 들이 어떤 Java 소스로 변환되었는지 분석하고 그 내용을 
간락히 적으십시요. -


- 브라우저 주소창에 multiplication.jsp 를 입력후 브라우저에 구구단 테이블이 보여질때까지 브라우저와 
Tomcat 이 수행하는 작업을 순서대로 기술하십시요. (Ex. 브라우저는 Tomcat 에게 http Get 방식으로 요청을 보낸다...) -


- JSP 에서 사용되어지는 모든 내부객체의 이름, 클래스명, 사용법 등을 기술하십시요. -


- <jsp:include>, <jsp:forward> 는 어떤 용도로 사용되며 차이점은 무엇인지 기술하십시요.
또한, 위 2가지 태그를 Java 코드로 표현해 보십시요. -


<jsp:forward> 와 redirection 은 페이지를 바꾸는데 사용되는 방법입니다. 차이점이 무엇인지 기술하십시요. 또한 화면을 redirection 시키는 방법을 아는대로 기술하십시요.
<jsp:include> 와 <%@ include %> 는 다른 JSP 를 현재 페이지의 특정 부분으로 끌어와 합치는데 사용되는 방법입니다. 어떤 차이점이 있는지 기술하십시요.
EL 표현식은 어떤 용도로 사용되는지 찾아보고, request 나 session 의 attribute, request 의 parameter 값을 어떻게 출력할 수 있는지 간단한 예를 들어 설명하십시요.
Standard Tag Library 의 종류를 간략히 설명하고, <c:out> 은 어떻게 사용되는지 예를 들어 설명하십시요.


- DBMS, SQL, DDL, DML 이 어떤 의미의 약어인지 정리하여 제출하십시요. -
DBMS(Database Management System, 데이터베이스 관리 시스템)
데이터베이스를 운영하고 관리하는 소프트웨어.
SQL(Structured Query Language)
구조화된 질의 언어라는 뜻으로 관계형 데이터베이스에서 사용되는 언어.
DDL(Data Definition Language)
데이터베이스를 정의하는 언어를 말하며 데이터를 생성하거나 수정, 삭제 등 데이터의 전체
골격을 결정하는 역할을 함.
DML(Data Manipulation Language)
정의된 데이터베이스에 입력된 레코드를 조회하거나 수정하거나 삭제하는 등의 역할을 함.
한마디로 테이블에 있는 행과 열을 조작하는 언어.


- Tomcat 이 viewBoardPost.jsp 를 분석하여 자동생성한 Java 파일을 열어보고
JSP 의 <%! > 와 < %> 의 차이점을 기술하십시요. -
<%!> 태그는 선언문 태그입니다. 메서드나 전역 변수를 선언하기 위해서 사용합니다.
<%> 태그는 스크립트 태그입니다. JSP문서 내에서 JAVA 코드를 기술하는 부분입니다.


